apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/red-hat-data-services/RHOAI-Build-Config?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/max-keep-runs: '3'
    pipelinesascode.tekton.dev/on-cel-expression: event == "push" && target_branch == "rhoai-2.20" && ( "catalog/**".pathChanged() || ".tekton/rhoai-fbc-fragment-v2-20-push.yaml".pathChanged() ) && !"catalog/catalog-patch.yaml".pathChanged() && !".github/workflows/**".pathChanged()
  creationTimestamp:
  labels:
    appstudio.openshift.io/application: rhoai-v2-20
    appstudio.openshift.io/component: rhoai-fbc-fragment-v2-20
    pipelines.appstudio.openshift.io/type: build
  name: rhoai-fbc-fragment-v2-20-on-push
  namespace: rhoai-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/rhoai/rhoai-fbc-fragment:{{target_branch}}
  - name: build-platforms
    value:
    - linux/x86_64
    - linux/ppc64le
    - linux/s390x
  - name: dockerfile
    value: Dockerfile
  - name: path-context
    value: catalog/v4.17
  - name: build-args-file
    value: catalog/catalog_build_args.map
  pipelineSpec:
    description: |
      This pipeline is ideal for building and verifying [file-based catalogs](https://konflux-ci.dev/docs/advanced-how-tos/building-olm.adoc#building-the-file-based-catalog).

      _Uses `buildah` to create a container image. Its build-time tests are limited to verifying the included catalog and do not scan the image.
      This pipeline is pushed as a Tekton bundle to [quay.io](https://quay.io/repository/konflux-ci/tekton-catalog/pipeline-fbc-builder?tab=tags)_
    finally:
    - name: show-sbom
      params:
      - name: IMAGE_URL
        value: $(tasks.build-image-index.results.IMAGE_URL)
      taskRef:
        params:
        - name: name
          value: show-sbom
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-show-sbom:0.1@sha256:beb0616db051952b4b861dd8c3e00fa1c0eccbd926feddf71194d3bb3ace9ce7
        - name: kind
          value: task
        resolver: bundles
    - name: send-slack-notification
      params:
      - name: message
        value: $(tasks.rhoai-init.results.slack-message-failure-text)
      - name: secret-name
        value: rhoai-konflux-secret
      - name: key-name
        value: slack-webhook
      taskRef:
        params:
        - name: name
          value: slack-webhook-notification
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-slack-webhook-notification:0.1@sha256:4e68fe2225debc256d403b828ed358345bb56d03327b46d55cb6c42911375750
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(tasks.status)
        operator: in
        values:
        - Failed
    - name: share-fbc-details
      params:
      - name: message
        value: $(tasks.prepare-slack-message.results.slack-message-sucess-text)
      - name: secret-name
        value: rhoai-konflux-secret
      - name: key-name
        value: slack-webhook
      taskRef:
        params:
        - name: name
          value: slack-webhook-notification
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-slack-webhook-notification:0.1@sha256:4e68fe2225debc256d403b828ed358345bb56d03327b46d55cb6c42911375750
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(tasks.status)
        operator: in
        values:
        - Completed
    params:
    - description: Source Repository URL
      name: git-url
      type: string
    - default: ''
      description: Revision of the Source Repository
      name: revision
      type: string
    - description: Fully Qualified Output Image
      name: output-image
      type: string
    - default: .
      description: Path to the source code of an application's component from where to build image.
      name: path-context
      type: string
    - default: Dockerfile
      description: Path to the Dockerfile inside the context specified by parameter path-context
      name: dockerfile
      type: string
    - default: 'false'
      description: Force rebuild image
      name: rebuild
      type: string
    - default: 'true'
      description: Skip checks against built image
      name: skip-checks
      type: string
    - default: 'true'
      description: Execute the build with network isolation
      name: hermetic
      type: string
    - default: ''
      description: Build dependencies to be prefetched by Cachi2
      name: prefetch-input
      type: string
    - default: ''
      description: Image tag expiration time, time values could be something like 1h, 2d, 3w for hours, days, and weeks, respectively.
      name: image-expires-after
    - default: 'false'
      description: Build a source image.
      name: build-source-image
      type: string
    - default: 'true'
      description: Add built image into an OCI image index
      name: build-image-index
      type: string
    - default: []
      description: Array of --build-arg values ("arg=value" strings) for buildah
      name: build-args
      type: array
    - default: ''
      description: Path to a file with build arguments for buildah, see https://www.mankier.com/1/buildah-build#--build-arg-file
      name: build-args-file
      type: string
    - default:
      - linux/x86_64
      description: List of platforms to build the container images on. The available set of values is determined by the configuration of the multi-platform-controller.
      name: build-platforms
      type: array
    results:
    - description: ''
      name: IMAGE_URL
      value: $(tasks.build-image-index.results.IMAGE_URL)
    - description: ''
      name: IMAGE_DIGEST
      value: $(tasks.build-image-index.results.IMAGE_DIGEST)
    - description: ''
      name: CHAINS-GIT_URL
      value: $(tasks.clone-repository.results.url)
    - description: ''
      name: CHAINS-GIT_COMMIT
      value: $(tasks.clone-repository.results.commit)
    tasks:
    - name: rhoai-init
      params:
      - name: pipelinerun-name
        value: $(context.pipelineRun.name)
      taskSpec:
        results:
        - description: Notification text to be posted to slack
          name: slack-message-failure-text
        steps:
        - image: quay.io/rhoai-konflux/alpine:latest
          name: rhoai-init
          env:
          - name: slack_message
            valueFrom:
              secretKeyRef:
                name: rhoai-konflux-secret
                key: slack-component-failure-notification
          script: |
            pipelinerun_name=$(params.pipelinerun-name)
            target_branch={{target_branch}}
            echo "target_branche = $target_branch"

            application_name=${target_branch/rhoai-/}
            echo "application-name = $application_name"

            application_name=rhoai-v${application_name/./-}
            echo "application-name = $application_name"

            component_name=${pipelinerun_name/-on-*/}
            echo "component-name = $component_name"

            KONFLUX_SERVER="https://konflux.apps.stone-prod-p02.hjvn.p1.openshiftapps.com"
            build_url="${KONFLUX_SERVER}/application-pipeline/workspaces/rhoai/applications/${application_name}/pipelineruns/${pipelinerun_name}/logs"

            build_time="$(date +%Y-%m-%dT%H:%M:%S)"

            slack_message=${slack_message/__BUILD__URL__/$build_url}
            slack_message=${slack_message/__PIPELINERUN__NAME__/$pipelinerun_name}
            slack_message=${slack_message/__BUILD__TIME__/$build_time}

            echo -en "${slack_message}" > "$(results.slack-message-failure-text.path)"
    - name: init
      params:
      - name: image-url
        value: $(params.output-image)
      - name: rebuild
        value: $(params.rebuild)
      - name: skip-checks
        value: 'false'
      taskRef:
        params:
        - name: name
          value: init
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-init:0.2@sha256:ded314206f09712b2116deb050b774ae7efef9ab243794334c8e616871a3ffa5
        - name: kind
          value: task
        resolver: bundles
      runAfter:
      - rhoai-init
    - name: clone-repository
      params:
      - name: url
        value: $(params.git-url)
      - name: revision
        value: $(params.revision)
      - name: ociStorage
        value: $(params.output-image).git
      - name: ociArtifactExpiresAfter
        value: $(params.image-expires-after)
      runAfter:
      - init
      taskRef:
        params:
        - name: name
          value: git-clone-oci-ta
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-git-clone-oci-ta:0.1@sha256:4a601aeec58a1dd89c271e728fd8f0d84777825b46940c3aec27f15bab3edacf
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(tasks.init.results.build)
        operator: in
        values:
        - 'true'
      workspaces:
      - name: basic-auth
        workspace: git-auth
    - name: prefetch-dependencies
      params:
      - name: input
        value: $(params.prefetch-input)
      - name: SOURCE_ARTIFACT
        value: $(tasks.clone-repository.results.SOURCE_ARTIFACT)
      - name: ociStorage
        value: $(params.output-image).prefetch
      - name: ociArtifactExpiresAfter
        value: $(params.image-expires-after)
      runAfter:
      - clone-repository
      taskRef:
        params:
        - name: name
          value: prefetch-dependencies-oci-ta
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-prefetch-dependencies-oci-ta:0.2@sha256:981dbd9ddecdbb716f321e65e645c6f74886352098d50d958f1195da550fac73
        - name: kind
          value: task
        resolver: bundles
      workspaces:
      - name: git-basic-auth
        workspace: git-auth
      - name: netrc
        workspace: netrc
    - name: build-images
      matrix:
        params:
        - name: PLATFORM
          value:
          - $(params.build-platforms)
      params:
      - name: IMAGE
        value: $(params.output-image)
      - name: DOCKERFILE
        value: $(params.dockerfile)
      - name: CONTEXT
        value: $(params.path-context)
      - name: HERMETIC
        value: $(params.hermetic)
      - name: PREFETCH_INPUT
        value: $(params.prefetch-input)
      - name: IMAGE_EXPIRES_AFTER
        value: $(params.image-expires-after)
      - name: COMMIT_SHA
        value: $(tasks.clone-repository.results.commit)
      - name: BUILD_ARGS
        value:
        - $(params.build-args[*])
      - name: BUILD_ARGS_FILE
        value: $(params.build-args-file)
      - name: SOURCE_ARTIFACT
        value: $(tasks.prefetch-dependencies.results.SOURCE_ARTIFACT)
      - name: CACHI2_ARTIFACT
        value: $(tasks.prefetch-dependencies.results.CACHI2_ARTIFACT)
      - name: IMAGE_APPEND_PLATFORM
        value: 'true'
      - name: LABELS
        value:
        - version=v2.20.0
        - url=$(params.git-url)
        - git.url=$(params.git-url)
        - git.commit=$(params.revision)
        - release='$(tasks.clone-repository.results.commit-timestamp)'
      runAfter:
      - clone-repository
      taskRef:
        params:
        - name: name
          value: buildah-remote-oci-ta
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-buildah-remote-oci-ta:0.4@sha256:cd9ef1eb119700a6883edcf93fd7c71dc33ee43467f3c2728b2a002c77915e8d
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(tasks.init.results.build)
        operator: in
        values:
        - 'true'
    - name: build-image-index
      params:
      - name: IMAGE
        value: $(params.output-image)
      - name: COMMIT_SHA
        value: $(tasks.clone-repository.results.commit)
      - name: IMAGE_EXPIRES_AFTER
        value: $(params.image-expires-after)
      - name: ALWAYS_BUILD_INDEX
        value: $(params.build-image-index)
      - name: IMAGES
        value:
        - $(tasks.build-images.results.IMAGE_REF[*])
      runAfter:
      - build-images
      taskRef:
        params:
        - name: name
          value: build-image-index
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-build-image-index:0.1@sha256:ba7fbed5c4862968c1a77d6b90d5bdd497925ab1de41b859c027dd5c3069cd3e
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(tasks.init.results.build)
        operator: in
        values:
        - 'true'
    - name: fbc-fips-check-oci-ta
      params:
      - name: image-digest
        value: $(tasks.build-image-index.results.IMAGE_DIGEST)
      - name: image-url
        value: $(tasks.build-image-index.results.IMAGE_URL)
      - name: SOURCE_ARTIFACT
        value: $(tasks.prefetch-dependencies.results.SOURCE_ARTIFACT)
      runAfter:
      - build-image-index
      taskRef:
        params:
        - name: name
          value: fbc-fips-check-oci-ta
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-fbc-fips-check-oci-ta:0.1@sha256:d73340c0e2409a871d8db99b46f13efea4921d377c29f78938363cbea552216f
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(params.skip-checks)
        operator: in
        values:
        - 'false'
    - name: sast-shell-check
      params:
      - name: image-digest
        value: $(tasks.build-image-index.results.IMAGE_DIGEST)
      - name: image-url
        value: $(tasks.build-image-index.results.IMAGE_URL)
      - name: SOURCE_ARTIFACT
        value: $(tasks.prefetch-dependencies.results.SOURCE_ARTIFACT)
      - name: CACHI2_ARTIFACT
        value: $(tasks.prefetch-dependencies.results.CACHI2_ARTIFACT)
      runAfter:
      - build-image-index
      taskRef:
        params:
        - name: name
          value: sast-shell-check-oci-ta
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-sast-shell-check-oci-ta:0.1@sha256:bf7bdde00b7212f730c1356672290af6f38d070da2c8a316987b5c32fd49e0b9
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(params.skip-checks)
        operator: in
        values:
        - 'false'
      workspaces: []
    - name: sast-unicode-check
      params:
      - name: image-url
        value: $(tasks.build-image-index.results.IMAGE_URL)
      - name: SOURCE_ARTIFACT
        value: $(tasks.prefetch-dependencies.results.SOURCE_ARTIFACT)
      - name: CACHI2_ARTIFACT
        value: $(tasks.prefetch-dependencies.results.CACHI2_ARTIFACT)
      - name: image-digest
        value: $(tasks.build-image-index.results.IMAGE_DIGEST)
      runAfter:
      - build-image-index
      taskRef:
        params:
        - name: name
          value: sast-unicode-check-oci-ta
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-sast-unicode-check-oci-ta:0.3@sha256:a2bde66f6b4164620298c7d709b8f08515409404000fa1dc2260d2508b135651
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(params.skip-checks)
        operator: in
        values:
        - 'false'
      workspaces: []
    - name: deprecated-base-image-check
      params:
      - name: IMAGE_URL
        value: $(tasks.build-image-index.results.IMAGE_URL)
      - name: IMAGE_DIGEST
        value: $(tasks.build-image-index.results.IMAGE_DIGEST)
      runAfter:
      - build-image-index
      taskRef:
        params:
        - name: name
          value: deprecated-image-check
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-deprecated-image-check:0.5@sha256:1d07d16810c26713f3d875083924d93697900147364360587ccb5a63f2c31012
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(params.skip-checks)
        operator: in
        values:
        - 'false'
    - name: apply-tags
      params:
      - name: ADDITIONAL_TAGS
        value:
        - '{{target_branch}}-{{revision}}'
      - name: IMAGE_URL
        value: $(tasks.build-image-index.results.IMAGE_URL)
      - name: IMAGE_DIGEST
        value: $(tasks.build-image-index.results.IMAGE_DIGEST)
      runAfter:
      - build-image-index
      taskRef:
        params:
        - name: name
          value: apply-tags
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-apply-tags:0.2@sha256:e0de426d492e195f59c99d2ea1ca0df7bfb8c689f5d1468fe7f70eb8684b8d02
        - name: kind
          value: task
        resolver: bundles
    - name: validate-fbc
      params:
      - name: IMAGE_URL
        value: $(tasks.build-image-index.results.IMAGE_URL)
      - name: IMAGE_DIGEST
        value: $(tasks.build-image-index.results.IMAGE_DIGEST)
      runAfter:
      - build-image-index
      taskRef:
        params:
        - name: name
          value: validate-fbc
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-validate-fbc:0.1@sha256:23fdc01a5eb5d24eee24bbcff512d8353c812be981239def33ac50f00bd1faf2
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(params.skip-checks)
        operator: in
        values:
        - 'false'
    - name: fbc-target-index-pruning-check
      params:
      - name: IMAGE_URL
        value: $(tasks.build-image-index.results.IMAGE_URL)
      - name: IMAGE_DIGEST
        value: $(tasks.build-image-index.results.IMAGE_DIGEST)
      - name: TARGET_INDEX
        value: registry.redhat.io/redhat/redhat-operator-index
      - name: RENDERED_CATALOG_DIGEST
        value: $(tasks.validate-fbc.results.RENDERED_CATALOG_DIGEST)
      runAfter:
      - validate-fbc
      taskRef:
        params:
        - name: name
          value: fbc-target-index-pruning-check
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-fbc-target-index-pruning-check:0.1@sha256:345a0fe66078f159d5b6863f389f5b48fc80f06710686751b2b5dcb20a02f880
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(params.skip-checks)
        operator: in
        values:
        - 'false'
    - name: prepare-slack-message
      params:
      - name: pipelinerun-name
        value: $(context.pipelineRun.name)
      - name: image-url
        value: $(tasks.build-image-index.results.IMAGE_URL)
      - name: image-digest
        value: $(tasks.build-image-index.results.IMAGE_DIGEST)
      taskSpec:
        results:
        - description: Notification text to be posted to slack
          name: slack-message-sucess-text
        steps:
        - image: quay.io/rhoai-konflux/alpine:latest
          name: rhoai-init
          script: |
            pipelinerun_name=$(params.pipelinerun-name)
            target_branch={{target_branch}}
            echo "pipelinerun-name = $pipelinerun_name"

            application_name=${target_branch/rhoai-/}
            application_name=rhoai-v${application_name/./-}
            echo "application-name = $application_name"

            component_name=${pipelinerun_name/-on-*/}
            echo "component-name = $component_name"

            KONFLUX_SERVER="https://konflux.apps.stone-prod-p02.hjvn.p1.openshiftapps.com"
            build_url="${KONFLUX_SERVER}/application-pipeline/workspaces/rhoai/applications/${application_name}/pipelineruns/${pipelinerun_name}/logs"

            alertEmoji=":solid-success:"
            build_time="$(date +%Y-%m-%dT%H:%M:%S)"
            slack_message="${alertEmoji} A new CI build is available for ${target_branch}: ${build_time}"
            slack_message=$(echo -e "${slack_message}\nImage: $(params.image-url)@$(params.image-digest)")
            slack_message=$(echo -e "${slack_message}\n<${build_url}|${pipelinerun_name}>")
            #slack_message=$(echo -e "${slack_message}\nCC - <@U04KZMFDZ2T>")

            echo -n "${slack_message}" > "$(results.slack-message-sucess-text.path)"
      runAfter:
      - build-image-index
    workspaces:
    - name: git-auth
      optional: true
    - name: netrc
      optional: true
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
